name: Deploy Lambda Function

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install dependencies
        run: npm install
      - name: Lint code
        run: npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test

  deploy_infrastructure:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deploy CloudFormation Stack
        run: |
          aws cloudformation deploy --template-file cloudformation-template.yml --stack-name alertify-inc-stack --capabilities CAPABILITY_IAM --region ${{ secrets.AWS_REGION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

  deploy_lambda:
    name: Deploy Lambda Function
    runs-on: ubuntu-latest
    needs: [deploy_infrastructure]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install dependencies
        run: npm install
      - name: Deploy to Lambda
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          zip -r function.zip .
          aws lambda update-function-code --function-name Alertify-Inc-ProcessEvents-Unique --zip-file fileb://function.zip --region $AWS_REGION

  notify_failure:
    name: Notify on Failure
    runs-on: ubuntu-latest
    if: failure()
    needs: [lint, test, deploy_infrastructure, deploy_lambda]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install dependencies
        run: npm install
      - name: List files
        run: ls -al  # Listar archivos para verificar la existencia del archivo
      - name: Send Failure Notification
        run: node sendFailureNotification.js ${{ secrets.TO_EMAIL }} ${{ secrets.FROM_EMAIL }} "Pipeline Failed" "The pipeline for your project has failed. Please check the details in GitHub Actions."
        env:
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
